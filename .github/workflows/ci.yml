# SPDX-FileCopyrightText: Copyright Â© 2025 hashcatHitman
#
# SPDX-License-Identifier: Apache-2.0 OR MIT

name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["**"]
  workflow_dispatch: {}

env:
  CARGO_TERM_COLOR: always
  MSRV: 1.89.0

jobs:
  quality-control:
    name: Quality Control
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Nightly Install
        run: rustup toolchain add nightly && rustup component add --toolchain nightly rustfmt clippy
      - name: Format Check (Nightly)
        run: cargo +nightly fmt --verbose --all --check
      - name: Clippy (Nightly)
        run: cargo +nightly clippy --locked --workspace --all-targets --all-features -- -D warnings -Zcrate-attr=feature"(strict_provenance_lints,unqualified_local_imports)"

  build-test-msrv:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    name: Build & Test (${{ matrix.os }}) (MSRV)
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5
      - name: MSRV Install
        run: rustup toolchain add ${{ env.MSRV }}
      - name: Build
        run: cargo +${{ env.MSRV }} build --verbose --workspace --all-targets --all-features --locked
      - name: Tests
        run: cargo +${{ env.MSRV }} test --verbose --workspace --all-targets --all-features --locked
      - name: Doctests
        run: cargo +${{ env.MSRV }} test --verbose --workspace --doc --all-features --locked

  build-test-nightly:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    name: Build & Test (${{ matrix.os }}) (Nightly)
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5
      - name: Build
        run: cargo +nightly build --verbose --workspace --all-targets --all-features --locked
      - name: Tests
        run: cargo +nightly test --verbose --workspace --all-targets --all-features --locked
      - name: Doctests
        run: cargo +nightly test --verbose --workspace --doc --all-features --locked
